数据结构
	hash 哈希
	key:value
	健 ：值
计数排序思路：首先要声明一个数组hash，把要排序的数组放到hash里面，这个过程要入桶，原理是把要排序的数字的value值，当作hash的key，hash里面的value值是计数的，记这个值出现了几次。当数字全部放完的时候，其实已经排好序了，现在hash里面的 key：value key就代表要排序的数字，value就表示它出现的格式，然后我们在把它从hash里面拿出来 ，如果value等于1 ，我们就放一个到新的数组里面，如果2个就放两个。这个过程叫出桶。
	
桶排序思路:和计数排序一样，不用一个数字一个桶 ，而是n个数字一个桶，然后，在每一个桶里面排序，这样就节约了桶，但是浪费了时间。

基数排序思路：先排个位数，依次往上面排，当排除，顺序就完了 

	队列（Queue）
	先进先出
	可以用数组来实现
	例子 排队
	例子，chrome浏览器
	var arr = [] //声明数组
	arr.push(1) //放数字
	arr.push(2) //放数字
	arr.push(3) //放数字
	arr.shift()  //叫号
	先进去的，先出来。
	
	栈（stack）
	先进后出
	例子：盗梦空间
	例子：chrome浏览器开发者工具
	var arr = [] //声明数组
	var arr = [] //声明数组
	arr.push(1) //放数字
	arr.push(2) //放数字
	arr.push(3) //放数字
	arr.pop()  //叫
	
	链表（linked list）
	为什么会有链表，因为数字很难删除中间项目。因为数字是联系的。
	图 ：链表的结构
	如果要删除a2 ，就把a1的next改成a3 ，a2就无形之中被删除了
	例子 chrome浏览器
	a{value:2 next:{
	   value:3 next:{
	    value:4 next:
	   }	
	}}
	
	数（tree）
	页面的数据结构就是树
	层数：这个树型结构有多少层
	深度：我的理解是层数-1
	节点：就是节点了。。
	二叉树 ：每个节点，最多有两个分支
	每第i层，最多有 2^i-1 个节点数
	满二叉树：一棵深度为k，且有(2^2-1）-1个节点的二叉树，称为满二叉树
	完全二叉树：若其余层都是满的，并且最后一层或者是满的，或者是在右边缺少 连续 若干节点，则此二叉树为完全二叉树
	
	堆排序
	完全二叉树，每个子节点都没有上面的节点大，就叫堆
	
	